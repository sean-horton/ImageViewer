/*
 * This file is generated by jOOQ.
 */
package com.onebytellc.imageviewer.backend.db.jooq.tables.daos;


import com.onebytellc.imageviewer.backend.db.jooq.tables.Path;
import com.onebytellc.imageviewer.backend.db.jooq.tables.records.PathRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PathDao extends DAOImpl<PathRecord, com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path, Integer> {

    /**
     * Create a new PathDao without any configuration
     */
    public PathDao() {
        super(Path.PATH, com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path.class);
    }

    /**
     * Create a new PathDao with an attached configuration
     */
    public PathDao(Configuration configuration) {
        super(Path.PATH, com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path.class, configuration);
    }

    @Override
    public Integer getId(com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Path.PATH.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchById(Integer... values) {
        return fetch(Path.PATH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path fetchOneById(Integer value) {
        return fetchOne(Path.PATH.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchOptionalById(Integer value) {
        return fetchOptional(Path.PATH.ID, value);
    }

    /**
     * Fetch records that have <code>collection_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchRangeOfCollectionId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Path.PATH.COLLECTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collection_id IN (values)</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchByCollectionId(Integer... values) {
        return fetch(Path.PATH.COLLECTION_ID, values);
    }

    /**
     * Fetch records that have <code>directory BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchRangeOfDirectory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Path.PATH.DIRECTORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>directory IN (values)</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchByDirectory(String... values) {
        return fetch(Path.PATH.DIRECTORY, values);
    }

    /**
     * Fetch records that have <code>depth BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchRangeOfDepth(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Path.PATH.DEPTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>depth IN (values)</code>
     */
    public List<com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Path> fetchByDepth(Integer... values) {
        return fetch(Path.PATH.DEPTH, values);
    }
}
