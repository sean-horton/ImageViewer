/*
 * This file is generated by jOOQ.
 */
package com.onebytellc.imageviewer.backend.db.jooq.tables.records;


import com.onebytellc.imageviewer.backend.db.jooq.tables.Image;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageRecord extends UpdatableRecordImpl<ImageRecord> implements Record5<Integer, Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>image.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>image.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>image.directory_id</code>.
     */
    public void setDirectoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>image.directory_id</code>.
     */
    public Integer getDirectoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>image.filename</code>.
     */
    public void setFilename(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>image.filename</code>.
     */
    public String getFilename() {
        return (String) get(2);
    }

    /**
     * Setter for <code>image.im_original_date</code>.
     */
    public void setImOriginalDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>image.im_original_date</code>.
     */
    public LocalDateTime getImOriginalDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>image.fs_modify_time</code>.
     */
    public void setFsModifyTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>image.fs_modify_time</code>.
     */
    public LocalDateTime getFsModifyTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Image.IMAGE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Image.IMAGE.DIRECTORY_ID;
    }

    @Override
    public Field<String> field3() {
        return Image.IMAGE.FILENAME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Image.IMAGE.IM_ORIGINAL_DATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Image.IMAGE.FS_MODIFY_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getDirectoryId();
    }

    @Override
    public String component3() {
        return getFilename();
    }

    @Override
    public LocalDateTime component4() {
        return getImOriginalDate();
    }

    @Override
    public LocalDateTime component5() {
        return getFsModifyTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getDirectoryId();
    }

    @Override
    public String value3() {
        return getFilename();
    }

    @Override
    public LocalDateTime value4() {
        return getImOriginalDate();
    }

    @Override
    public LocalDateTime value5() {
        return getFsModifyTime();
    }

    @Override
    public ImageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ImageRecord value2(Integer value) {
        setDirectoryId(value);
        return this;
    }

    @Override
    public ImageRecord value3(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public ImageRecord value4(LocalDateTime value) {
        setImOriginalDate(value);
        return this;
    }

    @Override
    public ImageRecord value5(LocalDateTime value) {
        setFsModifyTime(value);
        return this;
    }

    @Override
    public ImageRecord values(Integer value1, Integer value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImageRecord
     */
    public ImageRecord() {
        super(Image.IMAGE);
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(Integer id, Integer directoryId, String filename, LocalDateTime imOriginalDate, LocalDateTime fsModifyTime) {
        super(Image.IMAGE);

        setId(id);
        setDirectoryId(directoryId);
        setFilename(filename);
        setImOriginalDate(imOriginalDate);
        setFsModifyTime(fsModifyTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ImageRecord
     */
    public ImageRecord(com.onebytellc.imageviewer.backend.db.jooq.tables.pojos.Image value) {
        super(Image.IMAGE);

        if (value != null) {
            setId(value.getId());
            setDirectoryId(value.getDirectoryId());
            setFilename(value.getFilename());
            setImOriginalDate(value.getImOriginalDate());
            setFsModifyTime(value.getFsModifyTime());
            resetChangedOnNotNull();
        }
    }
}
