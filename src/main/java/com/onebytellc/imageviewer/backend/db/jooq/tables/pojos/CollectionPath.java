/*
 * This file is generated by jOOQ.
 */
package com.onebytellc.imageviewer.backend.db.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionPath implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private Integer collectionId;
    private String directory;
    private Integer depth;

    public CollectionPath() {}

    public CollectionPath(CollectionPath value) {
        this.id = value.id;
        this.collectionId = value.collectionId;
        this.directory = value.directory;
        this.depth = value.depth;
    }

    public CollectionPath(
        Integer id,
        Integer collectionId,
        String directory,
        Integer depth
    ) {
        this.id = id;
        this.collectionId = collectionId;
        this.directory = directory;
        this.depth = depth;
    }

    /**
     * Getter for <code>collection_path.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>collection_path.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>collection_path.collection_id</code>.
     */
    public Integer getCollectionId() {
        return this.collectionId;
    }

    /**
     * Setter for <code>collection_path.collection_id</code>.
     */
    public void setCollectionId(Integer collectionId) {
        this.collectionId = collectionId;
    }

    /**
     * Getter for <code>collection_path.directory</code>.
     */
    public String getDirectory() {
        return this.directory;
    }

    /**
     * Setter for <code>collection_path.directory</code>.
     */
    public void setDirectory(String directory) {
        this.directory = directory;
    }

    /**
     * Getter for <code>collection_path.depth</code>.
     */
    public Integer getDepth() {
        return this.depth;
    }

    /**
     * Setter for <code>collection_path.depth</code>.
     */
    public void setDepth(Integer depth) {
        this.depth = depth;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CollectionPath other = (CollectionPath) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.collectionId == null) {
            if (other.collectionId != null)
                return false;
        }
        else if (!this.collectionId.equals(other.collectionId))
            return false;
        if (this.directory == null) {
            if (other.directory != null)
                return false;
        }
        else if (!this.directory.equals(other.directory))
            return false;
        if (this.depth == null) {
            if (other.depth != null)
                return false;
        }
        else if (!this.depth.equals(other.depth))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.collectionId == null) ? 0 : this.collectionId.hashCode());
        result = prime * result + ((this.directory == null) ? 0 : this.directory.hashCode());
        result = prime * result + ((this.depth == null) ? 0 : this.depth.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CollectionPath (");

        sb.append(id);
        sb.append(", ").append(collectionId);
        sb.append(", ").append(directory);
        sb.append(", ").append(depth);

        sb.append(")");
        return sb.toString();
    }
}
