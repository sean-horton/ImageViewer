/*
 * This file is generated by jOOQ.
 */
package com.onebyte_llc.imageviewer.backend.db.jooq.tables.records;


import com.onebyte_llc.imageviewer.backend.db.jooq.tables.CollectionPath;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionPathRecord extends UpdatableRecordImpl<CollectionPathRecord> implements Record4<Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>collection_path.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>collection_path.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>collection_path.collection_id</code>.
     */
    public void setCollectionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>collection_path.collection_id</code>.
     */
    public Integer getCollectionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>collection_path.directory</code>.
     */
    public void setDirectory(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>collection_path.directory</code>.
     */
    public String getDirectory() {
        return (String) get(2);
    }

    /**
     * Setter for <code>collection_path.depth</code>.
     */
    public void setDepth(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>collection_path.depth</code>.
     */
    public Integer getDepth() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CollectionPath.COLLECTION_PATH.ID;
    }

    @Override
    public Field<Integer> field2() {
        return CollectionPath.COLLECTION_PATH.COLLECTION_ID;
    }

    @Override
    public Field<String> field3() {
        return CollectionPath.COLLECTION_PATH.DIRECTORY;
    }

    @Override
    public Field<Integer> field4() {
        return CollectionPath.COLLECTION_PATH.DEPTH;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCollectionId();
    }

    @Override
    public String component3() {
        return getDirectory();
    }

    @Override
    public Integer component4() {
        return getDepth();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCollectionId();
    }

    @Override
    public String value3() {
        return getDirectory();
    }

    @Override
    public Integer value4() {
        return getDepth();
    }

    @Override
    public CollectionPathRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CollectionPathRecord value2(Integer value) {
        setCollectionId(value);
        return this;
    }

    @Override
    public CollectionPathRecord value3(String value) {
        setDirectory(value);
        return this;
    }

    @Override
    public CollectionPathRecord value4(Integer value) {
        setDepth(value);
        return this;
    }

    @Override
    public CollectionPathRecord values(Integer value1, Integer value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectionPathRecord
     */
    public CollectionPathRecord() {
        super(CollectionPath.COLLECTION_PATH);
    }

    /**
     * Create a detached, initialised CollectionPathRecord
     */
    public CollectionPathRecord(Integer id, Integer collectionId, String directory, Integer depth) {
        super(CollectionPath.COLLECTION_PATH);

        setId(id);
        setCollectionId(collectionId);
        setDirectory(directory);
        setDepth(depth);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CollectionPathRecord
     */
    public CollectionPathRecord(com.onebyte_llc.imageviewer.backend.db.jooq.tables.pojos.CollectionPath value) {
        super(CollectionPath.COLLECTION_PATH);

        if (value != null) {
            setId(value.getId());
            setCollectionId(value.getCollectionId());
            setDirectory(value.getDirectory());
            setDepth(value.getDepth());
            resetChangedOnNotNull();
        }
    }
}
